# Logging settings
logging:
  # level: info # Could be debug, info, warn, error
  level: debug # Could be debug, info, warn, error
  format: console # Could be json or console
  output: stdout # Could be stdout, stderr, or a file path like /var/log/app.log

main_provider: "ipdata"

public_ip: ""

# Public IP Provider
public_ip_provider: "mock"

# IP Enrichers
enrichers:
  ipapi:
    name: ipapi
    url: "http://ip-api.com/json/"
    api_key: ""
    enabled: true

provider_configs:
  ipapi:
    name: ipapi
    url: "http://ip-api.com/json/"
    api_key: ""
    enabled: true
  ipdata:
    name: ipdata
    url: "https://api.ipdata.co"
    api_key: ""
    enabled: true
  ipqualityscore:
    name: ipqualityscore
    url: "https://ipqualityscore.com/api/json/ip"
    api_key: ""
    enabled: true
  openweather:
    name: openweather
    url: "http://api.openweathermap.org/data/2.5/weather"
    api_key: ""
    enabled: true
  ifconfig:
    name: ifconfig # ipapi.io # icanhazip.com
    url: "http://ifconfig.me/all.json"
    api_key: ""
    enabled: true
  ipapi.io:
    name: ifconfig # ipapi.io # icanhazip.com
    url: "http://ifconfig.me/all.json"
    api_key: ""
    enabled: true
  public_ip_provider: ifconfig.me

database:
  enabled: true
  type: sqlite
  path: ~/work/common/whereami/whereami_db.sqlite

# NOTE: gps is experimantal feature which need up & running gpsd.service on your host
gps:
  enabled: false
  provider: adb # gpsd # file
  timeout: 28s
  gpsd_socket: "/var/run/gpsd.sock"
  gpsd_dump_file: /opt/gps/data/gpsdata.json

crontab_tasks:
  - schedule: "@every 10s"

server:
  grpc:
    address: 0.0.0.0:9090
    timeout: 2s
  http:
    address: 0.0.0.0:9080
    timeout: 2s

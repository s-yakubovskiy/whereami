syntax = "proto3";

package api.whrmi.v1;

option go_package = "github.com/s-yakubovskiy/whereami/api/whrmi/v1;whrmi";
option java_multiple_files = true;
option java_package = "api.whrmi.v1";

import "google/api/annotations.proto";
// import "validate/validate.proto";
// import "google/protobuf/timestamp.proto";

service LocationService {
    rpc ShowLocation (ShowLocationRequest) returns (ShowLocationResponse);
    rpc GetLocation (GetLocationRequest) returns (GetLocationResponse);
}

service LocationKeeperService {
    rpc Init (InitRequest) returns (InitResponse);
    rpc AddVpnInterface (AddVpnInterfaceRequest) returns (AddVpnInterfaceResponse);
    rpc ListVpnInterfaces (ListVpnInterfacesRequest) returns (ListVpnInterfacesResponse);
    rpc ExportLocations (ExportLocationsRequest) returns (ExportLocationsResponse);
    rpc ImportLocations (ImportLocationsRequest) returns (ImportLocationsResponse);
    rpc StoreLocation (StoreLocationRequest) returns (StoreLocationResponse);
}

service ZoshService {
  rpc Live (LiveRequest) returns (LiveResponse) {
    option (google.api.http) = {
      get: "v1/live"
      response_body: "*"
    };
  };
}

message LiveRequest {}
message LiveResponse {
    string message = 1;
}


message Location {
    string ip = 1;
    string country = 2;
    string country_code = 3;
    string region = 4;
    string region_code = 5;
    string city = 6;
    string timezone = 7;
    string zip = 8;
    string flag = 9;
    string isp = 10;
    string asn = 11;
    double latitude = 12;
    double longitude = 13;
    string date = 14;
    bool vpn = 15;
    string comment = 16;
    LocationScores scores = 17;
    GPSReport gps = 18;
    string map = 19;
}

message LocationScores {
    int32 fraud_score = 1;
    bool is_crawler = 2;
    string host = 3;
    bool proxy = 4;
    bool vpn = 5;
    bool tor = 6;
    bool recent_abuse = 7;
    bool bot_status = 8;
}

message GPSReport {
    double latitude = 1;
    double longitude = 2;
    double altitude = 3;
    string url = 4;
}

message ShowLocationRequest {
    string status = 1;
}


message InitRequest {}
message InitResponse {}

message AddVpnInterfaceRequest {
  string vpninterface = 1;
}
message AddVpnInterfaceResponse {}

message ListVpnInterfacesRequest {}
message ListVpnInterfacesResponse {
  repeated string vpninterfaces = 1;
}

message ExportLocationsRequest {
 string exportpath = 1;
}
message ExportLocationsResponse {}

message ImportLocationsRequest {
   string importpath = 1;
}
message ImportLocationsResponse {}

message StoreLocationRequest {
    Location location = 1;
}
message StoreLocationResponse {
}

message GetLocationRequest {
    string ip = 1;
}
message GetLocationResponse {
    Location location = 1;
}

message ShowLocationResponse {
    Location location = 1;
}

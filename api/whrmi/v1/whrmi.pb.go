// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: whrmi.proto

package whrmi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string          `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Country     string          `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode string          `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Region      string          `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	RegionCode  string          `protobuf:"bytes,5,opt,name=region_code,json=regionCode,proto3" json:"region_code,omitempty"`
	City        string          `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Timezone    string          `protobuf:"bytes,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Zip         string          `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	Flag        string          `protobuf:"bytes,9,opt,name=flag,proto3" json:"flag,omitempty"`
	Isp         string          `protobuf:"bytes,10,opt,name=isp,proto3" json:"isp,omitempty"`
	Asn         string          `protobuf:"bytes,11,opt,name=asn,proto3" json:"asn,omitempty"`
	Latitude    float64         `protobuf:"fixed64,12,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float64         `protobuf:"fixed64,13,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Date        string          `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	Vpn         bool            `protobuf:"varint,15,opt,name=vpn,proto3" json:"vpn,omitempty"`
	Comment     string          `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	Scores      *LocationScores `protobuf:"bytes,17,opt,name=scores,proto3" json:"scores,omitempty"`
	Gps         *GPSReport      `protobuf:"bytes,18,opt,name=gps,proto3" json:"gps,omitempty"`
	Map         string          `protobuf:"bytes,19,opt,name=map,proto3" json:"map,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_whrmi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Location) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Location) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Location) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Location) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Location) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *Location) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *Location) GetAsn() string {
	if x != nil {
		return x.Asn
	}
	return ""
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Location) GetVpn() bool {
	if x != nil {
		return x.Vpn
	}
	return false
}

func (x *Location) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Location) GetScores() *LocationScores {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *Location) GetGps() *GPSReport {
	if x != nil {
		return x.Gps
	}
	return nil
}

func (x *Location) GetMap() string {
	if x != nil {
		return x.Map
	}
	return ""
}

type LocationScores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FraudScore  int32  `protobuf:"varint,1,opt,name=fraud_score,json=fraudScore,proto3" json:"fraud_score,omitempty"`
	IsCrawler   bool   `protobuf:"varint,2,opt,name=is_crawler,json=isCrawler,proto3" json:"is_crawler,omitempty"`
	Host        string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Proxy       bool   `protobuf:"varint,4,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Vpn         bool   `protobuf:"varint,5,opt,name=vpn,proto3" json:"vpn,omitempty"`
	Tor         bool   `protobuf:"varint,6,opt,name=tor,proto3" json:"tor,omitempty"`
	RecentAbuse bool   `protobuf:"varint,7,opt,name=recent_abuse,json=recentAbuse,proto3" json:"recent_abuse,omitempty"`
	BotStatus   bool   `protobuf:"varint,8,opt,name=bot_status,json=botStatus,proto3" json:"bot_status,omitempty"`
}

func (x *LocationScores) Reset() {
	*x = LocationScores{}
	mi := &file_whrmi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationScores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationScores) ProtoMessage() {}

func (x *LocationScores) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationScores.ProtoReflect.Descriptor instead.
func (*LocationScores) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{1}
}

func (x *LocationScores) GetFraudScore() int32 {
	if x != nil {
		return x.FraudScore
	}
	return 0
}

func (x *LocationScores) GetIsCrawler() bool {
	if x != nil {
		return x.IsCrawler
	}
	return false
}

func (x *LocationScores) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LocationScores) GetProxy() bool {
	if x != nil {
		return x.Proxy
	}
	return false
}

func (x *LocationScores) GetVpn() bool {
	if x != nil {
		return x.Vpn
	}
	return false
}

func (x *LocationScores) GetTor() bool {
	if x != nil {
		return x.Tor
	}
	return false
}

func (x *LocationScores) GetRecentAbuse() bool {
	if x != nil {
		return x.RecentAbuse
	}
	return false
}

func (x *LocationScores) GetBotStatus() bool {
	if x != nil {
		return x.BotStatus
	}
	return false
}

type GPSReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude  float64 `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Url       string  `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GPSReport) Reset() {
	*x = GPSReport{}
	mi := &file_whrmi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPSReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSReport) ProtoMessage() {}

func (x *GPSReport) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSReport.ProtoReflect.Descriptor instead.
func (*GPSReport) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{2}
}

func (x *GPSReport) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GPSReport) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GPSReport) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *GPSReport) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ShowLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ShowLocationRequest) Reset() {
	*x = ShowLocationRequest{}
	mi := &file_whrmi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowLocationRequest) ProtoMessage() {}

func (x *ShowLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowLocationRequest.ProtoReflect.Descriptor instead.
func (*ShowLocationRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{3}
}

func (x *ShowLocationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_whrmi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{4}
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	mi := &file_whrmi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{5}
}

type AddVpnInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vpninterface string `protobuf:"bytes,1,opt,name=vpninterface,proto3" json:"vpninterface,omitempty"`
}

func (x *AddVpnInterfaceRequest) Reset() {
	*x = AddVpnInterfaceRequest{}
	mi := &file_whrmi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVpnInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVpnInterfaceRequest) ProtoMessage() {}

func (x *AddVpnInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVpnInterfaceRequest.ProtoReflect.Descriptor instead.
func (*AddVpnInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{6}
}

func (x *AddVpnInterfaceRequest) GetVpninterface() string {
	if x != nil {
		return x.Vpninterface
	}
	return ""
}

type AddVpnInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddVpnInterfaceResponse) Reset() {
	*x = AddVpnInterfaceResponse{}
	mi := &file_whrmi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVpnInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVpnInterfaceResponse) ProtoMessage() {}

func (x *AddVpnInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVpnInterfaceResponse.ProtoReflect.Descriptor instead.
func (*AddVpnInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{7}
}

type ListVpnInterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVpnInterfacesRequest) Reset() {
	*x = ListVpnInterfacesRequest{}
	mi := &file_whrmi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVpnInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVpnInterfacesRequest) ProtoMessage() {}

func (x *ListVpnInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVpnInterfacesRequest.ProtoReflect.Descriptor instead.
func (*ListVpnInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{8}
}

type ListVpnInterfacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vpninterfaces []string `protobuf:"bytes,1,rep,name=vpninterfaces,proto3" json:"vpninterfaces,omitempty"`
}

func (x *ListVpnInterfacesResponse) Reset() {
	*x = ListVpnInterfacesResponse{}
	mi := &file_whrmi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVpnInterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVpnInterfacesResponse) ProtoMessage() {}

func (x *ListVpnInterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVpnInterfacesResponse.ProtoReflect.Descriptor instead.
func (*ListVpnInterfacesResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{9}
}

func (x *ListVpnInterfacesResponse) GetVpninterfaces() []string {
	if x != nil {
		return x.Vpninterfaces
	}
	return nil
}

type ExportLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exportpath string `protobuf:"bytes,1,opt,name=exportpath,proto3" json:"exportpath,omitempty"`
}

func (x *ExportLocationsRequest) Reset() {
	*x = ExportLocationsRequest{}
	mi := &file_whrmi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportLocationsRequest) ProtoMessage() {}

func (x *ExportLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportLocationsRequest.ProtoReflect.Descriptor instead.
func (*ExportLocationsRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{10}
}

func (x *ExportLocationsRequest) GetExportpath() string {
	if x != nil {
		return x.Exportpath
	}
	return ""
}

type ExportLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportLocationsResponse) Reset() {
	*x = ExportLocationsResponse{}
	mi := &file_whrmi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportLocationsResponse) ProtoMessage() {}

func (x *ExportLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportLocationsResponse.ProtoReflect.Descriptor instead.
func (*ExportLocationsResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{11}
}

type ImportLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Importpath string `protobuf:"bytes,1,opt,name=importpath,proto3" json:"importpath,omitempty"`
}

func (x *ImportLocationsRequest) Reset() {
	*x = ImportLocationsRequest{}
	mi := &file_whrmi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportLocationsRequest) ProtoMessage() {}

func (x *ImportLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportLocationsRequest.ProtoReflect.Descriptor instead.
func (*ImportLocationsRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{12}
}

func (x *ImportLocationsRequest) GetImportpath() string {
	if x != nil {
		return x.Importpath
	}
	return ""
}

type ImportLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportLocationsResponse) Reset() {
	*x = ImportLocationsResponse{}
	mi := &file_whrmi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportLocationsResponse) ProtoMessage() {}

func (x *ImportLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportLocationsResponse.ProtoReflect.Descriptor instead.
func (*ImportLocationsResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{13}
}

type StoreLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StoreLocationRequest) Reset() {
	*x = StoreLocationRequest{}
	mi := &file_whrmi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLocationRequest) ProtoMessage() {}

func (x *StoreLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLocationRequest.ProtoReflect.Descriptor instead.
func (*StoreLocationRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{14}
}

func (x *StoreLocationRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type StoreLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreLocationResponse) Reset() {
	*x = StoreLocationResponse{}
	mi := &file_whrmi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLocationResponse) ProtoMessage() {}

func (x *StoreLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLocationResponse.ProtoReflect.Descriptor instead.
func (*StoreLocationResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{15}
}

type GetLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GetLocationRequest) Reset() {
	*x = GetLocationRequest{}
	mi := &file_whrmi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationRequest) ProtoMessage() {}

func (x *GetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationRequest.ProtoReflect.Descriptor instead.
func (*GetLocationRequest) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{16}
}

func (x *GetLocationRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetLocationResponse) Reset() {
	*x = GetLocationResponse{}
	mi := &file_whrmi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationResponse) ProtoMessage() {}

func (x *GetLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationResponse.ProtoReflect.Descriptor instead.
func (*GetLocationResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{17}
}

func (x *GetLocationResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type ShowLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *ShowLocationResponse) Reset() {
	*x = ShowLocationResponse{}
	mi := &file_whrmi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowLocationResponse) ProtoMessage() {}

func (x *ShowLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whrmi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowLocationResponse.ProtoReflect.Descriptor instead.
func (*ShowLocationResponse) Descriptor() ([]byte, []int) {
	return file_whrmi_proto_rawDescGZIP(), []int{18}
}

func (x *ShowLocationResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_whrmi_proto protoreflect.FileDescriptor

var file_whrmi_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xf7, 0x03, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x70, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x76, 0x70, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x67, 0x70, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x50, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x03,
	0x67, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x61, 0x70, 0x22, 0xe0, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x75,
	0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66,
	0x72, 0x61, 0x75, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x70, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x76, 0x70, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x62, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x41, 0x62, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x09, 0x47, 0x50, 0x53, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a,
	0x13, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0d, 0x0a, 0x0b,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70, 0x6e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x70, 0x6e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x70, 0x6e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x41, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x76, 0x70, 0x6e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x70, 0x6e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x61, 0x74, 0x68, 0x22, 0x19, 0x0a,
	0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a,
	0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68,
	0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0xbc, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72,
	0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb6,
	0x04, 0x0a, 0x15, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x56, 0x70,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x70, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72,
	0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72,
	0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x46, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x68, 0x72, 0x6d, 0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x2d, 0x79, 0x61, 0x6b, 0x75, 0x62, 0x6f, 0x76, 0x73,
	0x6b, 0x69, 0x79, 0x2f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x68, 0x72, 0x6d, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_whrmi_proto_rawDescOnce sync.Once
	file_whrmi_proto_rawDescData = file_whrmi_proto_rawDesc
)

func file_whrmi_proto_rawDescGZIP() []byte {
	file_whrmi_proto_rawDescOnce.Do(func() {
		file_whrmi_proto_rawDescData = protoimpl.X.CompressGZIP(file_whrmi_proto_rawDescData)
	})
	return file_whrmi_proto_rawDescData
}

var file_whrmi_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_whrmi_proto_goTypes = []any{
	(*Location)(nil),                  // 0: api.whrmi.v1.Location
	(*LocationScores)(nil),            // 1: api.whrmi.v1.LocationScores
	(*GPSReport)(nil),                 // 2: api.whrmi.v1.GPSReport
	(*ShowLocationRequest)(nil),       // 3: api.whrmi.v1.ShowLocationRequest
	(*InitRequest)(nil),               // 4: api.whrmi.v1.InitRequest
	(*InitResponse)(nil),              // 5: api.whrmi.v1.InitResponse
	(*AddVpnInterfaceRequest)(nil),    // 6: api.whrmi.v1.AddVpnInterfaceRequest
	(*AddVpnInterfaceResponse)(nil),   // 7: api.whrmi.v1.AddVpnInterfaceResponse
	(*ListVpnInterfacesRequest)(nil),  // 8: api.whrmi.v1.ListVpnInterfacesRequest
	(*ListVpnInterfacesResponse)(nil), // 9: api.whrmi.v1.ListVpnInterfacesResponse
	(*ExportLocationsRequest)(nil),    // 10: api.whrmi.v1.ExportLocationsRequest
	(*ExportLocationsResponse)(nil),   // 11: api.whrmi.v1.ExportLocationsResponse
	(*ImportLocationsRequest)(nil),    // 12: api.whrmi.v1.ImportLocationsRequest
	(*ImportLocationsResponse)(nil),   // 13: api.whrmi.v1.ImportLocationsResponse
	(*StoreLocationRequest)(nil),      // 14: api.whrmi.v1.StoreLocationRequest
	(*StoreLocationResponse)(nil),     // 15: api.whrmi.v1.StoreLocationResponse
	(*GetLocationRequest)(nil),        // 16: api.whrmi.v1.GetLocationRequest
	(*GetLocationResponse)(nil),       // 17: api.whrmi.v1.GetLocationResponse
	(*ShowLocationResponse)(nil),      // 18: api.whrmi.v1.ShowLocationResponse
}
var file_whrmi_proto_depIdxs = []int32{
	1,  // 0: api.whrmi.v1.Location.scores:type_name -> api.whrmi.v1.LocationScores
	2,  // 1: api.whrmi.v1.Location.gps:type_name -> api.whrmi.v1.GPSReport
	0,  // 2: api.whrmi.v1.StoreLocationRequest.location:type_name -> api.whrmi.v1.Location
	0,  // 3: api.whrmi.v1.GetLocationResponse.location:type_name -> api.whrmi.v1.Location
	0,  // 4: api.whrmi.v1.ShowLocationResponse.location:type_name -> api.whrmi.v1.Location
	3,  // 5: api.whrmi.v1.LocationService.ShowLocation:input_type -> api.whrmi.v1.ShowLocationRequest
	16, // 6: api.whrmi.v1.LocationService.GetLocation:input_type -> api.whrmi.v1.GetLocationRequest
	4,  // 7: api.whrmi.v1.LocationKeeperService.Init:input_type -> api.whrmi.v1.InitRequest
	6,  // 8: api.whrmi.v1.LocationKeeperService.AddVpnInterface:input_type -> api.whrmi.v1.AddVpnInterfaceRequest
	8,  // 9: api.whrmi.v1.LocationKeeperService.ListVpnInterfaces:input_type -> api.whrmi.v1.ListVpnInterfacesRequest
	10, // 10: api.whrmi.v1.LocationKeeperService.ExportLocations:input_type -> api.whrmi.v1.ExportLocationsRequest
	12, // 11: api.whrmi.v1.LocationKeeperService.ImportLocations:input_type -> api.whrmi.v1.ImportLocationsRequest
	14, // 12: api.whrmi.v1.LocationKeeperService.StoreLocation:input_type -> api.whrmi.v1.StoreLocationRequest
	18, // 13: api.whrmi.v1.LocationService.ShowLocation:output_type -> api.whrmi.v1.ShowLocationResponse
	17, // 14: api.whrmi.v1.LocationService.GetLocation:output_type -> api.whrmi.v1.GetLocationResponse
	5,  // 15: api.whrmi.v1.LocationKeeperService.Init:output_type -> api.whrmi.v1.InitResponse
	7,  // 16: api.whrmi.v1.LocationKeeperService.AddVpnInterface:output_type -> api.whrmi.v1.AddVpnInterfaceResponse
	9,  // 17: api.whrmi.v1.LocationKeeperService.ListVpnInterfaces:output_type -> api.whrmi.v1.ListVpnInterfacesResponse
	11, // 18: api.whrmi.v1.LocationKeeperService.ExportLocations:output_type -> api.whrmi.v1.ExportLocationsResponse
	13, // 19: api.whrmi.v1.LocationKeeperService.ImportLocations:output_type -> api.whrmi.v1.ImportLocationsResponse
	15, // 20: api.whrmi.v1.LocationKeeperService.StoreLocation:output_type -> api.whrmi.v1.StoreLocationResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_whrmi_proto_init() }
func file_whrmi_proto_init() {
	if File_whrmi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_whrmi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_whrmi_proto_goTypes,
		DependencyIndexes: file_whrmi_proto_depIdxs,
		MessageInfos:      file_whrmi_proto_msgTypes,
	}.Build()
	File_whrmi_proto = out.File
	file_whrmi_proto_rawDesc = nil
	file_whrmi_proto_goTypes = nil
	file_whrmi_proto_depIdxs = nil
}
